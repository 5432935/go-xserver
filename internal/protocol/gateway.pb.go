// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: gateway.proto

package protocol

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type CMD_GW_ENUM int32

const (
	CMD_GW_INVALID           CMD_GW_ENUM = 0
	CMD_GW_PING              CMD_GW_ENUM = 1
	CMD_GW_REGISTER_SERVER   CMD_GW_ENUM = 2
	CMD_GW_LOSE_SERVER       CMD_GW_ENUM = 3
	CMD_GW_REGISTER_ACCOUNT  CMD_GW_ENUM = 4
	CMD_GW_RELAY_CLIENT_MSG  CMD_GW_ENUM = 5
	CMD_GW_LOSE_ACCOUNT      CMD_GW_ENUM = 6
	CMD_GW_RELAY_SERVER_MSG1 CMD_GW_ENUM = 7
	CMD_GW_RELAY_SERVER_MSG2 CMD_GW_ENUM = 8
)

var CMD_GW_ENUM_name = map[int32]string{
	0: "INVALID",
	1: "PING",
	2: "REGISTER_SERVER",
	3: "LOSE_SERVER",
	4: "REGISTER_ACCOUNT",
	5: "RELAY_CLIENT_MSG",
	6: "LOSE_ACCOUNT",
	7: "RELAY_SERVER_MSG1",
	8: "RELAY_SERVER_MSG2",
}
var CMD_GW_ENUM_value = map[string]int32{
	"INVALID":           0,
	"PING":              1,
	"REGISTER_SERVER":   2,
	"LOSE_SERVER":       3,
	"REGISTER_ACCOUNT":  4,
	"RELAY_CLIENT_MSG":  5,
	"LOSE_ACCOUNT":      6,
	"RELAY_SERVER_MSG1": 7,
	"RELAY_SERVER_MSG2": 8,
}

func (x CMD_GW_ENUM) String() string {
	return proto.EnumName(CMD_GW_ENUM_name, int32(x))
}
func (CMD_GW_ENUM) EnumDescriptor() ([]byte, []int) { return fileDescriptorGateway, []int{0, 0} }

type RELAY_SERVER_MSG_TYPE_ENUM int32

const (
	RELAY_SERVER_MSG_TYPE_BROADCAST RELAY_SERVER_MSG_TYPE_ENUM = 0
	RELAY_SERVER_MSG_TYPE_RANDOM    RELAY_SERVER_MSG_TYPE_ENUM = 1
)

var RELAY_SERVER_MSG_TYPE_ENUM_name = map[int32]string{
	0: "BROADCAST",
	1: "RANDOM",
}
var RELAY_SERVER_MSG_TYPE_ENUM_value = map[string]int32{
	"BROADCAST": 0,
	"RANDOM":    1,
}

func (x RELAY_SERVER_MSG_TYPE_ENUM) String() string {
	return proto.EnumName(RELAY_SERVER_MSG_TYPE_ENUM_name, int32(x))
}
func (RELAY_SERVER_MSG_TYPE_ENUM) EnumDescriptor() ([]byte, []int) {
	return fileDescriptorGateway, []int{4, 0}
}

type CMD_GW struct {
}

func (m *CMD_GW) Reset()                    { *m = CMD_GW{} }
func (m *CMD_GW) String() string            { return proto.CompactTextString(m) }
func (*CMD_GW) ProtoMessage()               {}
func (*CMD_GW) Descriptor() ([]byte, []int) { return fileDescriptorGateway, []int{0} }

// 注册账号 ( GATEWAY -> S )。只通知账号对应分配的服务
type MSG_GW_REGISTER_ACCOUNT struct {
	Account string `protobuf:"bytes,1,opt,name=Account,proto3" json:"Account,omitempty"`
}

func (m *MSG_GW_REGISTER_ACCOUNT) Reset()                    { *m = MSG_GW_REGISTER_ACCOUNT{} }
func (m *MSG_GW_REGISTER_ACCOUNT) String() string            { return proto.CompactTextString(m) }
func (*MSG_GW_REGISTER_ACCOUNT) ProtoMessage()               {}
func (*MSG_GW_REGISTER_ACCOUNT) Descriptor() ([]byte, []int) { return fileDescriptorGateway, []int{1} }

func (m *MSG_GW_REGISTER_ACCOUNT) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

// 中继客户端消息 ( GATEWAY -> S / S -> GATEWAY )
type MSG_GW_RELAY_CLIENT_MSG struct {
	Account string `protobuf:"bytes,1,opt,name=Account,proto3" json:"Account,omitempty"`
	CMD     uint32 `protobuf:"varint,2,opt,name=CMD,proto3" json:"CMD,omitempty"`
	Data    []byte `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
	Flag    uint32 `protobuf:"varint,4,opt,name=Flag,proto3" json:"Flag,omitempty"`
}

func (m *MSG_GW_RELAY_CLIENT_MSG) Reset()                    { *m = MSG_GW_RELAY_CLIENT_MSG{} }
func (m *MSG_GW_RELAY_CLIENT_MSG) String() string            { return proto.CompactTextString(m) }
func (*MSG_GW_RELAY_CLIENT_MSG) ProtoMessage()               {}
func (*MSG_GW_RELAY_CLIENT_MSG) Descriptor() ([]byte, []int) { return fileDescriptorGateway, []int{2} }

func (m *MSG_GW_RELAY_CLIENT_MSG) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *MSG_GW_RELAY_CLIENT_MSG) GetCMD() uint32 {
	if m != nil {
		return m.CMD
	}
	return 0
}

func (m *MSG_GW_RELAY_CLIENT_MSG) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *MSG_GW_RELAY_CLIENT_MSG) GetFlag() uint32 {
	if m != nil {
		return m.Flag
	}
	return 0
}

// 丢失账号 ( GATEWAY -> S )。只通知账号对应分配的服务
type MSG_GW_LOSE_ACCOUNT struct {
	Account string `protobuf:"bytes,1,opt,name=Account,proto3" json:"Account,omitempty"`
}

func (m *MSG_GW_LOSE_ACCOUNT) Reset()                    { *m = MSG_GW_LOSE_ACCOUNT{} }
func (m *MSG_GW_LOSE_ACCOUNT) String() string            { return proto.CompactTextString(m) }
func (*MSG_GW_LOSE_ACCOUNT) ProtoMessage()               {}
func (*MSG_GW_LOSE_ACCOUNT) Descriptor() ([]byte, []int) { return fileDescriptorGateway, []int{3} }

func (m *MSG_GW_LOSE_ACCOUNT) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

// 中继服务器消息 ( S -> GATEWAY -> S)
type RELAY_SERVER_MSG_TYPE struct {
}

func (m *RELAY_SERVER_MSG_TYPE) Reset()                    { *m = RELAY_SERVER_MSG_TYPE{} }
func (m *RELAY_SERVER_MSG_TYPE) String() string            { return proto.CompactTextString(m) }
func (*RELAY_SERVER_MSG_TYPE) ProtoMessage()               {}
func (*RELAY_SERVER_MSG_TYPE) Descriptor() ([]byte, []int) { return fileDescriptorGateway, []int{4} }

type MSG_GW_RELAY_SERVER_MSG1 struct {
	SourceID   *SERVER_ID                 `protobuf:"bytes,1,opt,name=SourceID" json:"SourceID,omitempty"`
	SourceType uint32                     `protobuf:"varint,2,opt,name=SourceType,proto3" json:"SourceType,omitempty"`
	TargetType uint32                     `protobuf:"varint,3,opt,name=TargetType,proto3" json:"TargetType,omitempty"`
	SendType   RELAY_SERVER_MSG_TYPE_ENUM `protobuf:"varint,4,opt,name=SendType,proto3,enum=protocol.RELAY_SERVER_MSG_TYPE_ENUM" json:"SendType,omitempty"`
	CMD        uint32                     `protobuf:"varint,5,opt,name=CMD,proto3" json:"CMD,omitempty"`
	Data       []byte                     `protobuf:"bytes,6,opt,name=Data,proto3" json:"Data,omitempty"`
	Flag       uint32                     `protobuf:"varint,7,opt,name=Flag,proto3" json:"Flag,omitempty"`
}

func (m *MSG_GW_RELAY_SERVER_MSG1) Reset()                    { *m = MSG_GW_RELAY_SERVER_MSG1{} }
func (m *MSG_GW_RELAY_SERVER_MSG1) String() string            { return proto.CompactTextString(m) }
func (*MSG_GW_RELAY_SERVER_MSG1) ProtoMessage()               {}
func (*MSG_GW_RELAY_SERVER_MSG1) Descriptor() ([]byte, []int) { return fileDescriptorGateway, []int{5} }

func (m *MSG_GW_RELAY_SERVER_MSG1) GetSourceID() *SERVER_ID {
	if m != nil {
		return m.SourceID
	}
	return nil
}

func (m *MSG_GW_RELAY_SERVER_MSG1) GetSourceType() uint32 {
	if m != nil {
		return m.SourceType
	}
	return 0
}

func (m *MSG_GW_RELAY_SERVER_MSG1) GetTargetType() uint32 {
	if m != nil {
		return m.TargetType
	}
	return 0
}

func (m *MSG_GW_RELAY_SERVER_MSG1) GetSendType() RELAY_SERVER_MSG_TYPE_ENUM {
	if m != nil {
		return m.SendType
	}
	return RELAY_SERVER_MSG_TYPE_BROADCAST
}

func (m *MSG_GW_RELAY_SERVER_MSG1) GetCMD() uint32 {
	if m != nil {
		return m.CMD
	}
	return 0
}

func (m *MSG_GW_RELAY_SERVER_MSG1) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *MSG_GW_RELAY_SERVER_MSG1) GetFlag() uint32 {
	if m != nil {
		return m.Flag
	}
	return 0
}

// 中继服务器消息 ( S -> GATEWAY -> S)
type MSG_GW_RELAY_SERVER_MSG2 struct {
	SourceID   *SERVER_ID `protobuf:"bytes,1,opt,name=SourceID" json:"SourceID,omitempty"`
	SourceType uint32     `protobuf:"varint,2,opt,name=SourceType,proto3" json:"SourceType,omitempty"`
	TargetID   *SERVER_ID `protobuf:"bytes,3,opt,name=TargetID" json:"TargetID,omitempty"`
	CMD        uint32     `protobuf:"varint,4,opt,name=CMD,proto3" json:"CMD,omitempty"`
	Data       []byte     `protobuf:"bytes,5,opt,name=Data,proto3" json:"Data,omitempty"`
	Flag       uint32     `protobuf:"varint,6,opt,name=Flag,proto3" json:"Flag,omitempty"`
}

func (m *MSG_GW_RELAY_SERVER_MSG2) Reset()                    { *m = MSG_GW_RELAY_SERVER_MSG2{} }
func (m *MSG_GW_RELAY_SERVER_MSG2) String() string            { return proto.CompactTextString(m) }
func (*MSG_GW_RELAY_SERVER_MSG2) ProtoMessage()               {}
func (*MSG_GW_RELAY_SERVER_MSG2) Descriptor() ([]byte, []int) { return fileDescriptorGateway, []int{6} }

func (m *MSG_GW_RELAY_SERVER_MSG2) GetSourceID() *SERVER_ID {
	if m != nil {
		return m.SourceID
	}
	return nil
}

func (m *MSG_GW_RELAY_SERVER_MSG2) GetSourceType() uint32 {
	if m != nil {
		return m.SourceType
	}
	return 0
}

func (m *MSG_GW_RELAY_SERVER_MSG2) GetTargetID() *SERVER_ID {
	if m != nil {
		return m.TargetID
	}
	return nil
}

func (m *MSG_GW_RELAY_SERVER_MSG2) GetCMD() uint32 {
	if m != nil {
		return m.CMD
	}
	return 0
}

func (m *MSG_GW_RELAY_SERVER_MSG2) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *MSG_GW_RELAY_SERVER_MSG2) GetFlag() uint32 {
	if m != nil {
		return m.Flag
	}
	return 0
}

func init() {
	proto.RegisterType((*CMD_GW)(nil), "protocol.CMD_GW")
	proto.RegisterType((*MSG_GW_REGISTER_ACCOUNT)(nil), "protocol.MSG_GW_REGISTER_ACCOUNT")
	proto.RegisterType((*MSG_GW_RELAY_CLIENT_MSG)(nil), "protocol.MSG_GW_RELAY_CLIENT_MSG")
	proto.RegisterType((*MSG_GW_LOSE_ACCOUNT)(nil), "protocol.MSG_GW_LOSE_ACCOUNT")
	proto.RegisterType((*RELAY_SERVER_MSG_TYPE)(nil), "protocol.RELAY_SERVER_MSG_TYPE")
	proto.RegisterType((*MSG_GW_RELAY_SERVER_MSG1)(nil), "protocol.MSG_GW_RELAY_SERVER_MSG1")
	proto.RegisterType((*MSG_GW_RELAY_SERVER_MSG2)(nil), "protocol.MSG_GW_RELAY_SERVER_MSG2")
	proto.RegisterEnum("protocol.CMD_GW_ENUM", CMD_GW_ENUM_name, CMD_GW_ENUM_value)
	proto.RegisterEnum("protocol.RELAY_SERVER_MSG_TYPE_ENUM", RELAY_SERVER_MSG_TYPE_ENUM_name, RELAY_SERVER_MSG_TYPE_ENUM_value)
}
func (m *CMD_GW) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CMD_GW) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	return i, nil
}

func (m *MSG_GW_REGISTER_ACCOUNT) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MSG_GW_REGISTER_ACCOUNT) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Account) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintGateway(dAtA, i, uint64(len(m.Account)))
		i += copy(dAtA[i:], m.Account)
	}
	return i, nil
}

func (m *MSG_GW_RELAY_CLIENT_MSG) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MSG_GW_RELAY_CLIENT_MSG) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Account) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintGateway(dAtA, i, uint64(len(m.Account)))
		i += copy(dAtA[i:], m.Account)
	}
	if m.CMD != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintGateway(dAtA, i, uint64(m.CMD))
	}
	if len(m.Data) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintGateway(dAtA, i, uint64(len(m.Data)))
		i += copy(dAtA[i:], m.Data)
	}
	if m.Flag != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintGateway(dAtA, i, uint64(m.Flag))
	}
	return i, nil
}

func (m *MSG_GW_LOSE_ACCOUNT) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MSG_GW_LOSE_ACCOUNT) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Account) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintGateway(dAtA, i, uint64(len(m.Account)))
		i += copy(dAtA[i:], m.Account)
	}
	return i, nil
}

func (m *RELAY_SERVER_MSG_TYPE) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RELAY_SERVER_MSG_TYPE) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	return i, nil
}

func (m *MSG_GW_RELAY_SERVER_MSG1) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MSG_GW_RELAY_SERVER_MSG1) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.SourceID != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintGateway(dAtA, i, uint64(m.SourceID.Size()))
		n1, err := m.SourceID.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n1
	}
	if m.SourceType != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintGateway(dAtA, i, uint64(m.SourceType))
	}
	if m.TargetType != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintGateway(dAtA, i, uint64(m.TargetType))
	}
	if m.SendType != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintGateway(dAtA, i, uint64(m.SendType))
	}
	if m.CMD != 0 {
		dAtA[i] = 0x28
		i++
		i = encodeVarintGateway(dAtA, i, uint64(m.CMD))
	}
	if len(m.Data) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintGateway(dAtA, i, uint64(len(m.Data)))
		i += copy(dAtA[i:], m.Data)
	}
	if m.Flag != 0 {
		dAtA[i] = 0x38
		i++
		i = encodeVarintGateway(dAtA, i, uint64(m.Flag))
	}
	return i, nil
}

func (m *MSG_GW_RELAY_SERVER_MSG2) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MSG_GW_RELAY_SERVER_MSG2) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.SourceID != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintGateway(dAtA, i, uint64(m.SourceID.Size()))
		n2, err := m.SourceID.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n2
	}
	if m.SourceType != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintGateway(dAtA, i, uint64(m.SourceType))
	}
	if m.TargetID != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintGateway(dAtA, i, uint64(m.TargetID.Size()))
		n3, err := m.TargetID.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n3
	}
	if m.CMD != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintGateway(dAtA, i, uint64(m.CMD))
	}
	if len(m.Data) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintGateway(dAtA, i, uint64(len(m.Data)))
		i += copy(dAtA[i:], m.Data)
	}
	if m.Flag != 0 {
		dAtA[i] = 0x30
		i++
		i = encodeVarintGateway(dAtA, i, uint64(m.Flag))
	}
	return i, nil
}

func encodeFixed64Gateway(dAtA []byte, offset int, v uint64) int {
	dAtA[offset] = uint8(v)
	dAtA[offset+1] = uint8(v >> 8)
	dAtA[offset+2] = uint8(v >> 16)
	dAtA[offset+3] = uint8(v >> 24)
	dAtA[offset+4] = uint8(v >> 32)
	dAtA[offset+5] = uint8(v >> 40)
	dAtA[offset+6] = uint8(v >> 48)
	dAtA[offset+7] = uint8(v >> 56)
	return offset + 8
}
func encodeFixed32Gateway(dAtA []byte, offset int, v uint32) int {
	dAtA[offset] = uint8(v)
	dAtA[offset+1] = uint8(v >> 8)
	dAtA[offset+2] = uint8(v >> 16)
	dAtA[offset+3] = uint8(v >> 24)
	return offset + 4
}
func encodeVarintGateway(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *CMD_GW) Size() (n int) {
	var l int
	_ = l
	return n
}

func (m *MSG_GW_REGISTER_ACCOUNT) Size() (n int) {
	var l int
	_ = l
	l = len(m.Account)
	if l > 0 {
		n += 1 + l + sovGateway(uint64(l))
	}
	return n
}

func (m *MSG_GW_RELAY_CLIENT_MSG) Size() (n int) {
	var l int
	_ = l
	l = len(m.Account)
	if l > 0 {
		n += 1 + l + sovGateway(uint64(l))
	}
	if m.CMD != 0 {
		n += 1 + sovGateway(uint64(m.CMD))
	}
	l = len(m.Data)
	if l > 0 {
		n += 1 + l + sovGateway(uint64(l))
	}
	if m.Flag != 0 {
		n += 1 + sovGateway(uint64(m.Flag))
	}
	return n
}

func (m *MSG_GW_LOSE_ACCOUNT) Size() (n int) {
	var l int
	_ = l
	l = len(m.Account)
	if l > 0 {
		n += 1 + l + sovGateway(uint64(l))
	}
	return n
}

func (m *RELAY_SERVER_MSG_TYPE) Size() (n int) {
	var l int
	_ = l
	return n
}

func (m *MSG_GW_RELAY_SERVER_MSG1) Size() (n int) {
	var l int
	_ = l
	if m.SourceID != nil {
		l = m.SourceID.Size()
		n += 1 + l + sovGateway(uint64(l))
	}
	if m.SourceType != 0 {
		n += 1 + sovGateway(uint64(m.SourceType))
	}
	if m.TargetType != 0 {
		n += 1 + sovGateway(uint64(m.TargetType))
	}
	if m.SendType != 0 {
		n += 1 + sovGateway(uint64(m.SendType))
	}
	if m.CMD != 0 {
		n += 1 + sovGateway(uint64(m.CMD))
	}
	l = len(m.Data)
	if l > 0 {
		n += 1 + l + sovGateway(uint64(l))
	}
	if m.Flag != 0 {
		n += 1 + sovGateway(uint64(m.Flag))
	}
	return n
}

func (m *MSG_GW_RELAY_SERVER_MSG2) Size() (n int) {
	var l int
	_ = l
	if m.SourceID != nil {
		l = m.SourceID.Size()
		n += 1 + l + sovGateway(uint64(l))
	}
	if m.SourceType != 0 {
		n += 1 + sovGateway(uint64(m.SourceType))
	}
	if m.TargetID != nil {
		l = m.TargetID.Size()
		n += 1 + l + sovGateway(uint64(l))
	}
	if m.CMD != 0 {
		n += 1 + sovGateway(uint64(m.CMD))
	}
	l = len(m.Data)
	if l > 0 {
		n += 1 + l + sovGateway(uint64(l))
	}
	if m.Flag != 0 {
		n += 1 + sovGateway(uint64(m.Flag))
	}
	return n
}

func sovGateway(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozGateway(x uint64) (n int) {
	return sovGateway(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *CMD_GW) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGateway
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CMD_GW: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CMD_GW: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGateway(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthGateway
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MSG_GW_REGISTER_ACCOUNT) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGateway
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MSG_GW_REGISTER_ACCOUNT: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MSG_GW_REGISTER_ACCOUNT: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Account", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGateway
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGateway
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Account = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGateway(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthGateway
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MSG_GW_RELAY_CLIENT_MSG) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGateway
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MSG_GW_RELAY_CLIENT_MSG: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MSG_GW_RELAY_CLIENT_MSG: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Account", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGateway
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGateway
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Account = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CMD", wireType)
			}
			m.CMD = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGateway
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CMD |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGateway
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthGateway
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Data = append(m.Data[:0], dAtA[iNdEx:postIndex]...)
			if m.Data == nil {
				m.Data = []byte{}
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flag", wireType)
			}
			m.Flag = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGateway
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flag |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGateway(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthGateway
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MSG_GW_LOSE_ACCOUNT) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGateway
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MSG_GW_LOSE_ACCOUNT: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MSG_GW_LOSE_ACCOUNT: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Account", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGateway
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGateway
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Account = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGateway(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthGateway
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RELAY_SERVER_MSG_TYPE) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGateway
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RELAY_SERVER_MSG_TYPE: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RELAY_SERVER_MSG_TYPE: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGateway(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthGateway
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MSG_GW_RELAY_SERVER_MSG1) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGateway
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MSG_GW_RELAY_SERVER_MSG1: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MSG_GW_RELAY_SERVER_MSG1: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SourceID", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGateway
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGateway
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SourceID == nil {
				m.SourceID = &SERVER_ID{}
			}
			if err := m.SourceID.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SourceType", wireType)
			}
			m.SourceType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGateway
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SourceType |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TargetType", wireType)
			}
			m.TargetType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGateway
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TargetType |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SendType", wireType)
			}
			m.SendType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGateway
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SendType |= (RELAY_SERVER_MSG_TYPE_ENUM(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CMD", wireType)
			}
			m.CMD = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGateway
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CMD |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGateway
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthGateway
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Data = append(m.Data[:0], dAtA[iNdEx:postIndex]...)
			if m.Data == nil {
				m.Data = []byte{}
			}
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flag", wireType)
			}
			m.Flag = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGateway
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flag |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGateway(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthGateway
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MSG_GW_RELAY_SERVER_MSG2) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGateway
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MSG_GW_RELAY_SERVER_MSG2: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MSG_GW_RELAY_SERVER_MSG2: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SourceID", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGateway
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGateway
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SourceID == nil {
				m.SourceID = &SERVER_ID{}
			}
			if err := m.SourceID.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SourceType", wireType)
			}
			m.SourceType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGateway
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SourceType |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TargetID", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGateway
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGateway
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.TargetID == nil {
				m.TargetID = &SERVER_ID{}
			}
			if err := m.TargetID.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CMD", wireType)
			}
			m.CMD = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGateway
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CMD |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGateway
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthGateway
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Data = append(m.Data[:0], dAtA[iNdEx:postIndex]...)
			if m.Data == nil {
				m.Data = []byte{}
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flag", wireType)
			}
			m.Flag = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGateway
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flag |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGateway(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthGateway
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipGateway(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowGateway
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGateway
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGateway
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthGateway
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowGateway
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipGateway(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthGateway = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowGateway   = fmt.Errorf("proto: integer overflow")
)

func init() { proto.RegisterFile("gateway.proto", fileDescriptorGateway) }

var fileDescriptorGateway = []byte{
	// 475 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x92, 0xb1, 0x6e, 0x9b, 0x50,
	0x14, 0x86, 0x7d, 0x6d, 0x8c, 0xc9, 0xb1, 0xdd, 0xdc, 0x1e, 0x37, 0x2a, 0xea, 0x80, 0x5c, 0xd4,
	0xc1, 0x93, 0xad, 0x3a, 0x5b, 0xa7, 0x12, 0x2e, 0x45, 0x48, 0x06, 0x47, 0x17, 0x92, 0x28, 0x13,
	0xa2, 0x14, 0x79, 0x89, 0x4d, 0x64, 0x11, 0x55, 0x79, 0x82, 0xae, 0x7d, 0x93, 0xee, 0x7d, 0x82,
	0x8e, 0x9d, 0x3a, 0x57, 0xee, 0x8b, 0x54, 0x5c, 0x8c, 0x4d, 0x12, 0xdc, 0xa9, 0x13, 0x87, 0xff,
	0xfc, 0xe7, 0x9e, 0xfb, 0xfd, 0x00, 0xfd, 0x45, 0x94, 0x25, 0x9f, 0xa3, 0xfb, 0xf1, 0xed, 0x3a,
	0xcd, 0x52, 0x54, 0xc4, 0x23, 0x4e, 0x6f, 0x5e, 0xf5, 0xe2, 0x74, 0xb9, 0x4c, 0x57, 0x85, 0xae,
	0x7f, 0x27, 0x20, 0x9b, 0x2e, 0x0b, 0xed, 0x2b, 0xfd, 0x1b, 0x01, 0xc9, 0xf2, 0x2e, 0x5c, 0xec,
	0x42, 0xc7, 0xf1, 0x2e, 0x8d, 0x99, 0xc3, 0x68, 0x03, 0x15, 0x90, 0xce, 0x1d, 0xcf, 0xa6, 0x04,
	0x07, 0x70, 0xcc, 0x2d, 0xdb, 0xf1, 0x03, 0x8b, 0x87, 0xbe, 0xc5, 0x2f, 0x2d, 0x4e, 0x9b, 0x78,
	0x0c, 0xdd, 0xd9, 0xdc, 0xb7, 0x4a, 0xa1, 0x85, 0x2f, 0x80, 0xee, 0x5c, 0x86, 0x69, 0xce, 0x2f,
	0xbc, 0x80, 0x4a, 0x85, 0x3a, 0x33, 0xae, 0x43, 0x73, 0xe6, 0x58, 0x5e, 0x10, 0xba, 0xbe, 0x4d,
	0xdb, 0x48, 0xa1, 0x27, 0x86, 0x4b, 0x9f, 0x8c, 0x27, 0xf0, 0xbc, 0xf0, 0x15, 0xe7, 0xe5, 0xbe,
	0xb7, 0xb4, 0x53, 0x27, 0x4f, 0xa9, 0xa2, 0x9f, 0xc2, 0x4b, 0xd7, 0xb7, 0x43, 0xfb, 0x2a, 0x7c,
	0xbc, 0x12, 0x55, 0xe8, 0x18, 0x71, 0x9c, 0xde, 0xad, 0x32, 0x95, 0x0c, 0xc9, 0xe8, 0x88, 0x97,
	0xaf, 0xfa, 0xb2, 0x32, 0xf4, 0xf0, 0x46, 0x87, 0x87, 0x90, 0x42, 0xcb, 0x74, 0x99, 0xda, 0x1c,
	0x92, 0x51, 0x9f, 0xe7, 0x25, 0x22, 0x48, 0x2c, 0xca, 0x22, 0xb5, 0x35, 0x24, 0xa3, 0x1e, 0x17,
	0x75, 0xae, 0x7d, 0xb8, 0x89, 0x16, 0xaa, 0x24, 0x6c, 0xa2, 0xd6, 0x27, 0x30, 0xd8, 0xae, 0xab,
	0xa2, 0xfe, 0xe3, 0x7e, 0xef, 0xe0, 0xe4, 0x31, 0x6b, 0x18, 0x5c, 0x9f, 0x5b, 0xfa, 0xeb, 0xed,
	0xe7, 0xe9, 0xc3, 0xd1, 0x19, 0x9f, 0x1b, 0xcc, 0x34, 0xfc, 0x80, 0x36, 0x10, 0x40, 0xe6, 0x86,
	0xc7, 0xe6, 0x2e, 0x25, 0xfa, 0x97, 0x26, 0xa8, 0x0f, 0xe0, 0x2a, 0x31, 0xe2, 0x04, 0x14, 0x3f,
	0xbd, 0x5b, 0xc7, 0x89, 0xc3, 0xc4, 0xce, 0xee, 0x74, 0x30, 0x2e, 0xff, 0x8a, 0xf1, 0xd6, 0xe8,
	0x30, 0xbe, 0x33, 0xa1, 0x06, 0x50, 0xd4, 0xc1, 0xfd, 0x6d, 0xb2, 0x65, 0xaf, 0x28, 0x79, 0x3f,
	0x88, 0xd6, 0x8b, 0x24, 0x13, 0xfd, 0x56, 0xd1, 0xdf, 0x2b, 0xf8, 0x1e, 0x14, 0x3f, 0x59, 0x7d,
	0x12, 0xdd, 0x3c, 0x92, 0x67, 0xd3, 0x37, 0xfb, 0x85, 0xb5, 0x8c, 0xe3, 0x1c, 0x90, 0xef, 0xa6,
	0xca, 0xd8, 0xdb, 0x4f, 0x63, 0x97, 0x6b, 0x62, 0xef, 0x54, 0x62, 0xff, 0x45, 0x0e, 0x26, 0x31,
	0xfd, 0xff, 0x49, 0x4c, 0x40, 0x29, 0xb8, 0x1d, 0x26, 0x72, 0x38, 0x74, 0x60, 0x69, 0x2a, 0xc1,
	0xa4, 0xa7, 0x60, 0xed, 0x1a, 0x30, 0x79, 0x0f, 0x76, 0x46, 0x7f, 0x6c, 0x34, 0xf2, 0x73, 0xa3,
	0x91, 0xdf, 0x1b, 0x8d, 0x7c, 0xfd, 0xa3, 0x35, 0x3e, 0xca, 0x62, 0xd3, 0xe9, 0xdf, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x8a, 0x34, 0xdd, 0x8a, 0xf2, 0x03, 0x00, 0x00,
}
